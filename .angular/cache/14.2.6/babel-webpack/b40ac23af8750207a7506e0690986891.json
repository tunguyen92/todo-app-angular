{"ast":null,"code":"import { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FilterEnum } from '../../types/filter.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/todos.service\";\n\nfunction MainComponent_app_todos_todo_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-todos-todo\", 5);\n    i0.ɵɵlistener(\"setEditingId\", function MainComponent_app_todos_todo_7_Template_app_todos_todo_setEditingId_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.setEditingId($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"todo\", todo_r1)(\"isEditing\", ctx_r0.editingId === todo_r1.id);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    hidden: a0\n  };\n};\n\nexport let MainComponent = /*#__PURE__*/(() => {\n  class MainComponent {\n    constructor(todosService) {\n      this.todosService = todosService;\n      this.editingId = null;\n      this.isAllTodosSelected$ = this.todosService.todos$.pipe(map(todos => todos.every(todo => todo.isCompleted)));\n      this.noTodoClass$ = this.todosService.todos$.pipe(map(todos => todos.length === 0));\n      this.visibleTodos$ = combineLatest(this.todosService.todos$, this.todosService.filter$).pipe(map(([todos, filter]) => {\n        if (filter === FilterEnum.active) {\n          return todos.filter(todo => !todo.isCompleted);\n        } else if (filter === FilterEnum.completed) {\n          return todos.filter(todo => todo.isCompleted);\n        }\n\n        return todos;\n      }));\n    }\n\n    toggleAllTodos(event) {\n      const target = event.target;\n      this.todosService.toggleAll(target.checked);\n    }\n\n    setEditingId(editingId) {\n      this.editingId = editingId;\n    }\n\n  }\n\n  MainComponent.ɵfac = function MainComponent_Factory(t) {\n    return new (t || MainComponent)(i0.ɵɵdirectiveInject(i1.TodosService));\n  };\n\n  MainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainComponent,\n    selectors: [[\"app-todos-main\"]],\n    decls: 9,\n    vars: 11,\n    consts: [[1, \"main\", 3, \"ngClass\"], [\"id\", \"toggle-all\", \"type\", \"checkbox\", 1, \"toggle-all\", 3, \"checked\", \"change\"], [\"for\", \"toggle-all\"], [1, \"todo-list\"], [3, \"todo\", \"isEditing\", \"setEditingId\", 4, \"ngFor\", \"ngForOf\"], [3, \"todo\", \"isEditing\", \"setEditingId\"]],\n    template: function MainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵelementStart(2, \"input\", 1);\n        i0.ɵɵlistener(\"change\", function MainComponent_Template_input_change_2_listener($event) {\n          return ctx.toggleAllTodos($event);\n        });\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Mark all as completed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ul\", 3);\n        i0.ɵɵtemplate(7, MainComponent_app_todos_todo_7_Template, 1, 2, \"app-todos-todo\", 4);\n        i0.ɵɵpipe(8, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, i0.ɵɵpipeBind1(1, 3, ctx.noTodoClass$)));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"checked\", i0.ɵɵpipeBind1(3, 5, ctx.isAllTodosSelected$));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 7, ctx.visibleTodos$));\n      }\n    },\n    encapsulation: 2\n  });\n  return MainComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}